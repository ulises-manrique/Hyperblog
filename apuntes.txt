Clase 7: linea de comandos.
-> "touch archivo.extencion" crea un archivo.
-> "cat archivo.extencion" permite ver el contenido de un archivo.
->"history" permite ver los comandos utilizados anteriormente con un numero de comando.
-> "rm" elimina archivos de manera permanente, utilizar con mcho cuidado.

"!no.comando" repide un comando.

clase 8: staging.

-> staging: area en memoria ram donde se agregan los cambios de manera inicial; el archivo se queda a la espera de ser enviado al repositorio (o agragar archivos, ser eliminado, etc). Sucede con git add.

-> "git add" se mandan los cambios al staging y se "trakean" (rastrean).

->"git commit" se mandan los cambios al repositorio"
->"git commit -m '...'" mando los cambios al repositorio con un comentario

->"checkout" obtener los cambios del proyecto, archivos o ciertos archivos.

clase 9: ramas.

-> "merge" fuciona dos ramas.

Clase 10: creacion del repositorio.

-> "git init" crea el repositorio.

-> Carpeta oculta ".git" es la base de datos atomica de git

Clase 11: Analizar cambios de en los archivos.

->"Git show archivo.extencion" Muestra los cambios de un archivo entre la utima version y la version anterior.

Agregar comentarios en los "commit" son buenas practicas.